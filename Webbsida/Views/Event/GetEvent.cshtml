@using Microsoft.Ajax.Utilities
@model Webbsida.ViewModels.GetEventViewModel

<h2>@Html.DisplayFor(model => model.Event.EventName)</h2>

<img src="@Url.Content(Model.Event.ImagePath)" alt="Image" />

<div id="Main">


    <h1>Debug:</h1>
    <span class="alert alert-info">
        @if (Model.LoggedInUser != null)
        {
            @Model.LoggedInUser.Email
        }
        else
        {
            <text>Not logged in.</text>
        }
    </span>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Event.Firstname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Firstname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.MaxSignups)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.MaxSignups)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.MinSignups)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.MinSignups)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.Price)
        </dt>

        <dd>
            @if (Model.Event.Price != null && Model.Event.Price != 0)
            {
                @Html.DisplayFor(model => model.Event.Price)
            }
            else
            {
                <p>GRATIS!!!!</p>
            }



        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Event.PhoneNumber)
        </dd>

    </dl>
    <div id="Spotsleft">
        @Html.Action("GetSpotsLeft", "Event")
    </div>

    @if (Model.IsOwnerOfThisEvent)
    {
        <input type="hidden" name="EventId" id="Id" value="@Model.Event.Id" />
        <p class="alert alert-info">Detta är ditt event.</p>
    }
    else if (Model.AlreadyBookedOnThisEvent)
    {
        <input type="hidden" name="EventId" id="Id" value="@Model.Event.Id" />
        <p class="alert alert-success">Du är bokad på eventet.</p>

        using (Html.BeginForm("UnBookEvent", "Event", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="EventId" id="Id" value="@Model.Event.Id" />
            <div class="form-group">
                <div class="col-md-12">
                    <button class="btn btn-danger">Avboka din anmälan!</button>
                </div>
            </div>
        }

    }
    else
    {

        using (Html.BeginForm("BookEvent", "Event", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <input type="hidden" name="EventId" id="Id" value="@Model.Event.Id" />
            //TODO: Make a dropdownlist with status for the booking?
            <div class="form-group">
                <div class="col-md-12">
                    <button class="btn btn-success">Anmäl dig!</button>
                </div>
            </div>
        }
    }




    <div id="map">

    </div>
</div>

@section Scripts {
    <script src="~/Scripts/site/geoScriptsV2.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBlemvE5X2QVIkrj0r4r_rJkLRilNdK9xg&callback=GoogleMapsEventController.initSingleEventDisplayingMap"></script>
}
